"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[6555],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var a=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},v=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(r),v=l,u=d["".concat(p,".").concat(v)]||d[v]||m[v]||o;return r?a.createElement(u,n(n({ref:t},c),{},{components:r})):a.createElement(u,n({ref:t},c))}));function u(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,n=new Array(o);n[0]=v;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:l,n[1]=i;for(var s=2;s<o;s++)n[s]=r[s];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}v.displayName="MDXCreateElement"},2332:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>n,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=r(7462),l=(r(7294),r(3905));const o={sidebar_position:1},n="Developer Tools Overview",i={unversionedId:"develop/tools-overview",id:"develop/tools-overview",title:"Developer Tools Overview",description:"Wallets",source:"@site/../../src/develop/tools-overview.md",sourceDirName:"develop",slug:"/develop/tools-overview",permalink:"/develop/tools-overview",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/develop/tools-overview.md",tags:[],version:"current",lastUpdatedAt:1688555554,formattedLastUpdatedAt:"Jul 5, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/develop/intro"},next:{title:"Account Abstraction",permalink:"/develop/account-abstraction"}},p={},s=[{value:"Wallets",id:"wallets",level:3},{value:"API",id:"api",level:3},{value:"Blockchain Explorers",id:"blockchain-explorers",level:3},{value:"Tools for developers",id:"tools-for-developers",level:3},{value:"TON Solidity Compiler IDE integrations",id:"ton-solidity-compiler-ide-integrations",level:3},{value:"Libraries for developers",id:"libraries-for-developers",level:3},{value:"Node-related repos",id:"node-related-repos",level:3}],c={toc:s},d="wrapper";function m(e){let{components:t,...r}=e;return(0,l.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"developer-tools-overview"},"Developer Tools Overview"),(0,l.kt)("h3",{id:"wallets"},"Wallets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://ever.surf/"},"Ever Surf")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://everwallet.net"},"Ever Wallet"))),(0,l.kt)("h3",{id:"api"},"API"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://evercloud.dev"},"Evercloud")," (",(0,l.kt)("a",{parentName:"li",href:"https://docs.evercloud.dev"},"docs"),") - Evercloud provides TVM networks developers with scalable GraphQL endpoints. Supports Everscale mainnet, devnet, fld-testnet, TON mainnet, Venom testnet.")),(0,l.kt)("h3",{id:"blockchain-explorers"},"Blockchain Explorers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://ever.live"},"Ever Live")," (",(0,l.kt)("a",{parentName:"li",href:"https://net.ever.live"},"devnet")," ",(0,l.kt)("a",{parentName:"li",href:"https://fld.ever.live"},"fld")," ",(0,l.kt)("a",{parentName:"li",href:"https://rfld.ever.live"},"rfld"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://everscan.io"},"Everscan")," (",(0,l.kt)("a",{parentName:"li",href:"https://testnet.everscan.io"},"devnet"),")")),(0,l.kt)("h3",{id:"tools-for-developers"},"Tools for developers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/TON-Solidity-Compiler"},"TON Solidity Compiler")," (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/TON-Solidity-Compiler/blob/master/API.md"},"reference"),") - Port of the Solidity smart-contract compiler generating TVM bytecode for TON blockchain. Can be installed within Everdev or Locklift environments as well, or compiled manually.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/everdev"},"Everdev CLI")," (",(0,l.kt)("a",{parentName:"p",href:"/develop/smart-contracts/everdev"},"Quick start")," | ",(0,l.kt)("a",{parentName:"p",href:"https://docs.everos.dev/everdev"},"docs"),") - Everdev is a Node.js package with CLI interface that allows to set up developer environment and develop on TVM compatible blockchains (Everscale, Venom, TON, Gosh, etc).")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/broxus/locklift"},"Locklift")," - development environment, analogous to Hardhat.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://ever.bytie.moe"},"Bytie")," - smart contracts interaction playground and useful devtools"))),(0,l.kt)("h3",{id:"ton-solidity-compiler-ide-integrations"},"TON Solidity Compiler IDE integrations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=everscale.solidity-support"},"VSCode TON Solidity Compiler plugin 1")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=mytonwallet.ton-solidity-extension"},"VSCode TON Solidity Compiler plugin 2")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://plugins.jetbrains.com/plugin/20696-t-sol"},"JetBrains TON Solidity Compiler plugin"))),(0,l.kt)("h3",{id:"libraries-for-developers"},"Libraries for developers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/ever-sdk-js"},"JavaScript Ever SDK")," (",(0,l.kt)("a",{parentName:"li",href:"https://docs.everos.dev/ever-sdk"},"docs"),") - Client Library built for Everscale, Venom blockchain, TON, Gosh for Web, Node.js and React Native platforms"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/ever-sdk"},"Rust Ever SDK")," - Rust Client Library (core) for DApp development in TVM blockchains (Everscale, TON, Venom Blockchain, etc). Bindings to multiple languages available."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/EverSurf/surfkeeper-provider"},"Surf Keeper JS Provider")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/broxus/everscale-inpage-provider/"},"EVER Wallet JS Provider")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/broxus/everscale-standalone-client"},"Alternative NodeJS Client"))),(0,l.kt)("h3",{id:"node-related-repos"},"Node-related repos"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/evernode-ds"},"Evernode dApp Server")," -  a community (open source) version of Evernode Platform (client supernode with GraphQL API) for TVM blockchains that exposes GraphQL API."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/evernode-se"},"Local Node")," - local blockchain for contract and Dapp testing, exposing GraphQL API. Can be installed and managed within Everdev environment"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/broxus/ton-indexer"},"Light Node")," - Lightweight node implementation"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/ever-node"},"Everscale Node")," - Validator and Full Node implementation"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/broxus/nodekeeper"},"Nodekeeper")," - All-in-one node management tool"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/broxus/everscale-network"},"everscale-network")," - minimal implementation of the Everscale network protocol")))}m.isMDXComponent=!0}}]);